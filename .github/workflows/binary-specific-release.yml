# This workflow will release project with Gradle
name: Binary specific release

on:
    workflow_dispatch:
        inputs:
            release_version:
                description: 'The version that is going to be released'
                required: true
            new_version:
                description: 'The version that should be used as a new one after the release.'
                required: true

jobs:
    release:
        runs-on: ubuntu-latest
        timeout-minutes: 40

        steps:
            - uses: actions/checkout@v4
              with:
                  ref: ${{ github.head_ref }}
                  token: ${{ secrets.ZOWE_ROBOT_TOKEN }}

            - uses: ./.github/actions/setup

            - name: Print npm version
              run: npm -v

            - name: Build with Gradle
              run: ./gradlew clean build

            - name: Clean git
              run: git reset --hard HEAD

            - name: Set email
              run: git config user.email "zowe-robot@users.noreply.github.com"

            - name: Set name
              run: git config user.name "Zowe Robot"

            - name: Release to NPM automatic
              shell: bash
              run: |
                  cd onboarding-enabler-nodejs
                  echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
                  npm version ${{ github.event.inputs.release_version }} --allow-same-version
                  npm publish --access public
                  git add package.json
                  git add package-lock.json
                  git commit -m "[skip ci] Update version"
                  git push --no-verify
                  cd ..
              env:
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Release with Gradle automatic
              shell: bash
              run: |
                  ./gradlew release -x test -x checkstyleTest -Prelease.useAutomaticVersion=true -Prelease.releaseVersion=${{ github.event.inputs.release_version }} -Prelease.newVersion=${{ github.event.inputs.new_version }} -Pzowe.deploy.username=$ARTIFACTORY_USERNAME -Pzowe.deploy.password=$ARTIFACTORY_PASSWORD -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_PASSWORD
                  released_version=$(cat gradle.properties | grep "version=" | sed "s/version=//g")
                  sed -i "/REACT_APP_ZOWE_BUILD_INFO=/c\REACT_APP_ZOWE_BUILD_INFO=${released_version}" api-catalog-ui/frontend/.env
                  git add api-catalog-ui/frontend/.env
                  git commit -m "[skip ci] Update version"
                  git push
              env:
                  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
                  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
                  BUILD_NUMBER: ${{ github.run_number }}
                  BRANCH_NAME: ${{ github.ref_name }}

    release-python-enabler:
        runs-on: ubuntu-latest
        timeout-minutes: 40
        needs: release

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  token: ${{ secrets.ZOWE_ROBOT_TOKEN }}

            - name: Setup Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.13"

            - name: Install Dependencies
              run: |
                  cd onboarding-enabler-python
                  python -m venv venv
                  source venv/bin/activate
                  python -m pip install --upgrade pip setuptools wheel twine build
                  if [ -f Pipfile.lock ]; then
                    pip install pipenv
                    pipenv install --deploy --ignore-pipfile
                  fi

            - name: Build Python Package
              run: |
                  export SETUPTOOLS_SCM_PRETEND_VERSION=${{ github.event.inputs.release_version }}
                  ./gradlew onboarding-enabler-python:buildPython

            - name: Upload wheels
              uses: actions/upload-artifact@v4
              with:
                name: wheels
                path: onboarding-enabler-python/dist/

            - name: Install twine globally
              run: python3 -m pip install --upgrade twine

            - uses: zowe-actions/octorelease@v1
              env:
                GIT_COMMITTER_NAME: ${{ secrets.ZOWE_ROBOT_USER }}
                GIT_COMMITTER_EMAIL: ${{ secrets.ZOWE_ROBOT_EMAIL }}
                GIT_CREDENTIALS: x-access-token:${{ secrets.ZOWE_ROBOT_TOKEN }}
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                TWINE_USERNAME: __token__
                TWINE_PASSWORD: ${{ secrets.PYPI_ROBOT_TOKEN }}
              with:
                working-dir: onboarding-enabler-python
                dry-run: ${{ inputs.dry-run }}
                new-version: ${{ steps.update-version.outputs.version }}

    store-results:
        runs-on: ubuntu-latest
        if: failure()
        needs: [release, release-python-enabler]

        steps:
            - name: Store test results
              uses: actions/upload-artifact@v4
              with:
                  name: BinarySpecificRelease-${{ github.run_number }}
                  path: |
                      gateway-service/build/reports/**
                      discovery-service/build/reports/**
                      caching-service/build/reports/**
                      api-catalog-services/build/reports/**
                      zaas-service/build/reports/**
                      ~/.npm/_logs
            - uses: ./.github/actions/teardown
